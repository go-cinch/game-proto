syntax = "proto3";

package game.v1;

import "openapiv3/annotations.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "cinch/params/params.proto";

option go_package = "api/game;game";
option java_multiple_files = true;
option java_package = "game.v1";
option java_outer_classname = "GameProtoV1";

option (openapi.v3.document) = {
  info: {
    title: "Game service";
    version: "1.0.0";
    description: "This is game service docs";
  }
  components: {
    security_schemes: {
      additional_properties: [
        {
          name: "BearerAuth";
          value: {
            security_scheme: {
              type: "http";
              scheme: "bearer";
            }
          }
        }
      ]
    }
  }
  security: [
    {
      additional_properties: [
        {
          name: "BearerAuth";
          value: {
            value: []
          }
        }
      ]
    }
  ]
};

service Game {
  // create one Game record
  rpc CreateGame (CreateGameRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/game"
      body: "*"
    };
  }
  // query one Game record
  rpc GetGame (GetGameRequest) returns (GetGameReply) {
    option (google.api.http) = {
      get: "/game/{id}"
    };
  }
  // query Game list by page
  rpc FindGame (FindGameRequest) returns (FindGameReply) {
    option (google.api.http) = {
      get: "/game"
    };
  }
  // update one Game record by id
  rpc UpdateGame (UpdateGameRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/game/{id}"
      body: "*",
      additional_bindings {
        patch: "/game/{id}",
        body: "*",
      }
    };
  }
  // delete one or more Game record by id
  rpc DeleteGame (params.IdsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/game"
    };
  }
}

message GameReply {
  uint64 id = 1;
  string name = 2;
}

message CreateGameRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetGameRequest {
  uint64 id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetGameReply {
  uint64 id = 1;
  string name = 2;
}

message FindGameRequest {
  params.Page page = 1;
  optional string name = 2;
}

message FindGameReply {
  params.Page page = 1;
  repeated GameReply list = 2;
}

message UpdateGameRequest {
  uint64 id = 1 [(google.api.field_behavior) = REQUIRED];
  optional string name = 2;
}
